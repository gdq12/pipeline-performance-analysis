version: 2

models:
  - name: stg_green__1a_id_duplicate_records
    description: >
      This view detects rides that appear to be the same but 1 ride has the exact negative `fare amount` 
      compared to the positive value ride. The dimensions that are considered for comparison are 
      `pickup datetime`, `dropoff datetime`, `ratecode ID`, `pickup location ID`, 
      `dropoff location ID`, `passenger count`, `trip distance`. 
      This is based on the recommendation of the this [medium article](https://medium.com/@muhammadaris10/nyc-taxi-trip-data-analysis-45ecfdcb6f91).
    columns:
      - name: pickup_datetime
        data_type: timestamp
        quote: true
        description: The date and time when the meter was engaged.
      - name: dropoff_datetime
        data_type: timestamp
        quote: true
        description: The date and time when the meter was disengaged.
      - name: ratecode_id
        data_type: int64
        quote: true
        description: the final rate code in effect at the end of the trip.
      - name: pickup_location_id
        data_type: int64
        quote: true
        description: TLC Taxi Zone in which the taximeter was engaged.
      - name: dropoff_location_id
        data_type: int64
        quote: true
        description: TLC Taxi Zone in which the taximeter was disengaged.
      - name: passenger_count
        data_type: int64
        quote: true
        description: The number of passengers in the vehicle, which was entered by the driver.
      - name: trip_distance
        data_type: float64
        quote: true
        description: The elapsed trip distance in miles reported by the taximeter.
      - name: row_count
        data_type: int64
        quote: true
        description: number of rows that have identical entries for the target dimensions.
      - name: total_fare_amount
        data_type: float64
        quote: true
        description: sum of fare_amount for the rides with identical entries in the target dimensions.

  - name: stg_green__1b_id_faulty_trips
    description: >
      This view identifies "faulty" ride entries based on comparing the metadat within the given record. 
      It is based on background knowledge from the datasets [data dictionary](https://www.nyc.gov/assets/tlc/downloads/pdf/data_dictionary_trip_records_yellow.pdf) and identifies records that do not seem plausible based on this knowledge.
    columns:
      - name: data_source
        description: BigQuery bucket path where the partitioned source parquets are located.
        data_type: string

      - name: trip_id
        description: unique trip/ride ID created in the clean layer of transformation.
        data_type: string

  - name: stg_green__2_filter_out_faulty
    description: >
      Filters out faulty trips/rides that were identified in the stg_green__1* views.

    columns:
      - name: trip_type_start_date
        data_type: datetime
        description: >
          First day of the month that pickup_datetime should not be before. Table is partitioned on this column.

      - name: data_source
        data_type: string
        description: >
          Bigquery bucket path where the partitioned source parquets are located. Table is clustered on this column.

      - name: pickup_date
        data_type: timestamp
        description: >
          The day truncation of `pickup_datetime`. This column was used to partition the source parquet  file after it was partially processed by the spark cluster (Dataproc). Table is clustered on this column.

      - name: trip_type_end_date
        data_type: date
        description: >
          Last day of the month that dropoff_datetime should not be too much after (1-2 days max).

      - name: trip_id
        data_type: string
        description: >
          unique ID created from `dbt_utils.generate_surrogate_key` by using all columns in this view.

      - name: vendor_id
        data_type: int64
        description: >
          A code indicating the LPEP provider that provided the record. 

      - name: pickup_datetime
        data_type: timestamp
        description: >
          The date and time when the meter was engaged.

      - name: dropoff_datetime
        data_type: timestamp
        description: >
          The date and time when the meter was disengaged. 

      - name: store_and_fwd_flag
        data_type: string
        description: >
          This flag indicates whether the trip record was held in vehicle memory before sending to the vendor, aka “store and forward,” because the vehicle did not have a connection to the server.

      - name: ratecode_id
        data_type: int64
        description: >
          The final rate code in effect at the end of the trip

      - name: pickup_location_id
        data_type: int64
        description: >
          TLC Taxi Zone in which the taximeter was engaged.

      - name: dropoff_location_id
        data_type: int64
        description: >
          TLC Taxi Zone in which the taximeter was disengaged.

      - name: passenger_count
        data_type: int64
        description: >
          The number of passengers in the vehicle. 

      - name: trip_distance
        data_type: float64
        description: >
          The elapsed trip distance in miles reported by the taximeter.

      - name: fare_amount
        data_type: float64
        description: >
          The time-and-distance fare calculated by the meter.

      - name: extra_amount
        data_type: float64
        description: >
          Miscellaneous extras and surcharges.

      - name: mta_tax
        data_type: float64
        description: >
          Tax that is automatically triggered based on the metered rate in use.

      - name: tip_amount
        data_type: float64
        description: >
          Tip amount. This field is automatically populated for credit card tips. Cash tips are not included.

      - name: tolls_amount
        data_type: float64
        description: >
          Total amount of all tolls paid in trip.

      - name: ehail_fee
        data_type: float64
        description: >
          Licensed E-hail providers to offer upfront pricing in all participating yellow and green taxicabs. In addition to metered fares, passengers riding in Medallion taxicabs and Street Hail Liveries (SHLs) will now have the option to receive binding fare quotes when completing an E-Hail request.

      - name: improvement_surcharge
        data_type: float64
        description: >
          Improvement surcharge assessed trips at the flag drop. The improvement surcharge began being levied in 2015.

      - name: total_amount
        data_type: float64
        description: >
          The total amount charged to passengers. Does not include cash tips.

      - name: payment_type
        data_type: float64
        description: >
          A numeric code signifying how the passenger paid for the trip.

      - name: trip_type
        data_type: int64
        description: >
          A code indicating whether the trip was a street-hail or a dispatch that is automatically assigned based on the metered rate in use but can be altered by the driver. 

      - name: congestion_surcharge
        data_type: float64
        description: >
          Total amount collected in trip for NYS congestion surcharge.
          
      - name: creation_dt
        data_type: timestamp
        description: >
          Timestamp for when the data was copied over into the target schema from bigquery bucket. 